{
    "folders": [{"path": "./"}],
    "settings": {
        "debug.allowBreakpointsEverywhere": true,
        "python.languageServer": "Pylance",
        "python.linting.enabled": true,
        "python.linting.flake8Args": ["--config=docker/flake8.ini"],
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Path": "/home/ubuntu/.local/bin/flake8",
        "python.linting.mypyArgs": ["--config=docker/mypy.ini"],
        "python.linting.mypyEnabled": true,
        "python.linting.mypyPath": "/home/ubuntu/.local/bin/mypy",
        "python.linting.pycodestylePath": "/home/ubuntu/.local/bin/pycodestyle",
        "python.linting.pylintEnabled": false,
        "python.defaultInterpreterPath": "/usr/bin/python3.10",
        "python.testing.pytestArgs": [],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "todo-tree.filtering.excludeGlobs": ["**/docs/**/*.*"],
        "terminal.integrated.profiles.linux": {
            "zsh": {"path": "/bin/zsh"}
        },
        "search.exclude": {
            "**/docs": true
        },
        "files.exclude": {
            "**/__pypackages__": true,
            "**/.classpath": true,
            "**/.coverage": true,
            "**/.DS_Store": true,
            "**/.factorypath": true,
            "**/.git": true,
            "**/.hg": true,
            "**/.ipynb_checkpoints": true,
            "**/.mypy_cache": true,
            "**/.project": true,
            "**/.pytest_cache": true,
            "**/.settings": true,
            "**/.svn": true,
            "**/.vscode": true,
            "**/CVS": true,
            "**/flask_monitoringdashboard.db": true,
            "*/*/**/node_modules": true
        }
    },
    "tasks": {
        "version": "2.0.0",
        "options": {
            "cwd": "${workspaceFolder}",
            "env": {
                "X_TOOLS_PATH": "${workspaceFolder}/docker/x-tools.sh",
            }
        },
        "tasks": [
            {
                "label": "[build]-pip-package",
                "detail": "Generate pip package of repo in ~/build/repo",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-build-pip-package"
                ],
                "type": "shell"
            },
            {
                "label": "[build]-prod",
                "detail": "Build production version of repo for publishing",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-build-prod"
                ],
                "type": "shell"
            },
            {
                "label": "[build]-publish",
                "detail": "Publish pip package of repo to PyPi",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-build-publish",
                    "${input:pypi_user}",
                    "${input:pypi_password}",
                    "${input:pypi_comment}"
                ],
                "type": "shell"
            },
            {
                "label": "[build]-test",
                "detail": "Build test version of repo for tox testing",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-build-test"
                ],
                "type": "shell"
            },
            {
                "label": "[docs]",
                "detail": "Generate sphinx documentation",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-docs"
                ],
                "type": "shell"
            },
            {
                "label": "[docs]-architecture",
                "detail": "Generate architecture.svg diagram from all import statements",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-docs-architecture"
                ],
                "type": "shell"
            },
            {
                "label": "[docs]-full",
                "detail": "Generate documentation, coverage report, architecture diagram and code metrics",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-docs-full"
                ],
                "type": "shell"
            },
            {
                "label": "[docs]-metrics",
                "detail": "Generate code metrics report, plots and tables",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-docs-metrics"
                ],
                "type": "shell"
            },
            {
                "label": "[lab]",
                "detail": "Run jupyter lab server",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-lab"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-add",
                "detail": "Add a given package to a given dependency group",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-add ${input:pdm_package} ${input:pdm_group}"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-graph-dev",
                "detail": "Graph dependencies in dev environment",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-graph-dev"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-graph-prod",
                "detail": "Graph dependencies in prod environment",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-graph-prod"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-install-dev",
                "detail": "Install all dependencies of dev/pyproject.toml into ~/dev",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-install-dev"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-install-prod",
                "detail": "Install all dependencies of prod/pyproject.toml into ~/prod",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-install-prod"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-list-dev",
                "detail": "List packages in dev environment",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-list-dev"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-list-prod",
                "detail": "List packages in prod environment",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-list-prod"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-lock",
                "detail": "Update ~/dev/pdm.lock file",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-lock"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-remove",
                "detail": "Remove a given package from a given dependency group",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-remove ${input:pdm_package} ${input:pdm_group}"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-search",
                "detail": "Search for pip packages",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-search ${input:pdm_package}"
                ],
                "type": "shell"
            },
            {
                "label": "[library]-update",
                "detail": "Update dev dependencies",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-library-update"
                ],
                "type": "shell"
            },
            {
                "label": "[python]",
                "detail": "Run python session with dev dependencies",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-python"
                ],
                "type": "shell"
            },
            {
                "label": "[test]-coverage",
                "detail": "Generate test coverage report",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-test-coverage"
                ],
                "type": "shell"
            },
            {
                "label": "[test]-dev",
                "detail": "Run all tests",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-test-dev"
                ],
                "type": "shell"
            },
            {
                "label": "[test]-fast",
                "detail": "Test all code excepts tests marked with SKIP_SLOWS_TESTS decorator",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-test-fast"
                ],
                "type": "shell"
            },
            {
                "label": "[test]-lint",
                "detail": "Run linting and type checking",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-test-lint"
                ],
                "type": "shell"
            },
            {
                "label": "[test]-prod",
                "detail": "Run tests across all support python versions",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-test-prod"
                ],
                "type": "shell"
            },
            {
                "label": "[version]",
                "detail": "Full resolution of repo: dependencies, linting, tests, docs, etc",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-version"
                ],
                "type": "shell"
            },
            {
                "label": "[version]-bump-major",
                "detail": "Bump repo's major version",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-version-bump-major"
                ],
                "type": "shell"
            },
            {
                "label": "[version]-bump-minor",
                "detail": "Bump repo's minor version",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-version-bump-minor"
                ],
                "type": "shell"
            },
            {
                "label": "[version]-bump-patch",
                "detail": "Bump repo's patch version",
                "command": [
                    "source $X_TOOLS_PATH &&",
                    "x-version-bump-patch"
                ],
                "type": "shell"
            }
        ],
    "inputs": [
            {
                "id": "pdm_group",
                "type": "pickString",
                "description": "Dependency group:",
                "options": ["none", "dev", "test", "lab"],
                "default": "none"
            },
            {
                "id": "pdm_package",
                "type": "promptString",
                "description": "Package name:"
            },
            {
                "id": "pypi_user",
                "description": "PyPi username:",
                "type": "promptString",
                "default": "the-new-flesh"
            },
            {
                "id": "pypi_password",
                "description": "PyPi password:",
                "type": "promptString"
            },
            {
                "id": "pypi_comment",
                "description": "Comments:",
                "type": "promptString"
            }
        ]
    }
}
