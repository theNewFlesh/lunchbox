{
    "folders": [{"path": "./"}],
    "settings": {
        "debug.allowBreakpointsEverywhere": true,
        "python.languageServer": "Pylance",
        "python.linting.enabled": true,
        "python.linting.flake8Args": ["--config=docker/flake8.ini"],
        "python.linting.flake8Enabled": true,
        "python.linting.flake8Path": "/home/ubuntu/.local/bin/flake8",
        "python.linting.mypyArgs": ["--config=docker/mypy.ini"],
        "python.linting.mypyEnabled": true,
        "python.linting.mypyPath": "/home/ubuntu/.local/bin/mypy",
        "python.linting.pycodestylePath": "/home/ubuntu/.local/bin/pycodestyle",
        "python.linting.pylintEnabled": false,
        "python.defaultInterpreterPath": "/usr/bin/python3.10",
        "python.testing.pytestArgs": [],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "todo-tree.filtering.excludeGlobs": ["**/docs/**/*.*"],
        "terminal.integrated.profiles.linux": {
            "zsh": {"path": "/bin/zsh"}
        },
        "search.exclude": {
            "**/docs": true
        },
        "files.exclude": {
            "**/__pypackages__": true,
            "**/.classpath": true,
            "**/.coverage": true,
            "**/.DS_Store": true,
            "**/.factorypath": true,
            "**/.git": true,
            "**/.hg": true,
            "**/.ipynb_checkpoints": true,
            "**/.mypy_cache": true,
            "**/.project": true,
            "**/.pytest_cache": true,
            "**/.settings": true,
            "**/.svn": true,
            "**/.vscode": true,
            "**/CVS": true,
            "**/flask_monitoringdashboard.db": true,
            "*/*/**/node_modules": true
        }
    },
    "tasks": {
        "version": "2.0.0",
        "options": {
            "cwd": "/home/ubuntu/${workspaceFolderBasename}",
            "env": {
                "PATH": ":/home/ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/ubuntu/.local/lib:/home/ubuntu/dev/__pypackages__/3.10/bin",
                "PYTHONPATH": ":/home/ubuntu/lunchbox/python:/home/ubuntu/.local/share/pdm/venv/lib/python3.10/site-packages/pdm/pep582:/home/ubuntu/.local/lib:/home/ubuntu/dev/__pypackages__/3.10/lib",
                "REPO": "${workspaceFolderBasename}",
                "REPO_PATH": "/home/ubuntu/${workspaceFolderBasename}",
                "REPO_ENV": "True"
            }
        },
        "tasks": [
            // {
            //     "label": "app",
            //     "command": [
            //         "export DEBUG_MODE=True &&",
            //         "python3 python/$REPO/server/app.py"
            //     ],
            //     "type": "shell"
            // },
            {
                "label": "link",
                "command": "ln -sf /home/ubuntu/dev/__pypackages__ $REPO_PATH/__pypackages__",
                "type": "shell"
            },
            {
                "label": "architecture",
                "command": [
                    "python3 -c ",
                        "\"import rolling_pin.repo_etl as rpo;",
                        "rpo.write_repo_architecture(",
                            "'/home/ubuntu/$REPO/python',",
                            "'docs/architecture.svg',",
                            "exclude_regex='test|mock',",
                            "orient='lr'",
                        ")\""
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "build-dev",
                "command": "pdm install --no-self --dev -v",
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "build-prod",
                "command": [
                    "python3 /home/ubuntu/$REPO/docker/generate_pyproject.py",
                    "   pyproject.toml '>=3.7' --groups test",
                    "> ../prod/pyproject.toml &&",
                    "cd ../prod &&",
                    "pdm install --no-self --dev -v"
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "coverage",
                "command": [
                    "mkdir -p $REPO_PATH/docs &&",
                    "export PROCS=`",
                        "python3 -c 'import os; print(os.cpu_count())'` &&",
                    "pytest",
                        "-c docker/pytest.ini",
                        "--numprocesses $PROCS",
                        "--cov=python",
                        "--cov-config=docker/pytest.ini",
                        "--cov-report=html:docs/htmlcov",
                        "python"
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "docs",
                "command": [
                    "mkdir -p $REPO_PATH/docs &&",
                    "pandoc README.md -o sphinx/intro.rst &&",
                    "sphinx-build sphinx docs &&",
                    "cp sphinx/style.css docs/_static/style.css &&",
                    "touch docs/.nojekyll &&",
                    "mkdir -p $REPO_PATH/docs/resources"
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "fast-test",
                "command": [
                    "export PROCS=`",
                        "python3 -c 'import os; print(os.cpu_count())'` &&",
                    "SKIP_SLOW_TESTS=true",
                    "pytest",
                        "-c docker/pytest.ini",
                        "--numprocesses $PROCS",
                        "python"
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "full-docs",
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": [
                    "link",
                    "docs",
                    "coverage",
                    "architecture",
                    "metrics"
                ]
            },
            {
                "label": "lab",
                "command": "jupyter lab --allow-root --ip=0.0.0.0 --no-browser",
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "lint",
                "command": [
                    "echo 'LINTING' &&",
                    "flake8 python --config docker/flake8.ini &&",
                    "echo 'TYPE CHECKING' &&",
                    "mypy python --config-file docker/mypy.ini"
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "metrics",
                "command": [
                    "python3 -c ",
                        "\"import rolling_pin.repo_etl as rpo;",
                        "rpo.write_repo_plots_and_tables(",
                            "'python', 'docs/plots.html', 'docs'",
                        ")\""
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "package-repo",
                "command": [
                    "rm -rf /home/ubuntu/build && ",
                    "python3 -c",
                    "\"from rolling_pin.conform_etl import ConformETL;",
                    "src = 'docker/build.yaml';",
                    "ConformETL.from_yaml(src).conform(groups=['base', 'prod'])",
                    "\""
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "package",
                "command": [
                    "unset REPO_ENV &&",
                    "cd /tmp/$REPO &&",
                    "python3 setup.py sdist"
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "link",
                    "package-repo"
                ],
                "type": "shell"
            },
            {
                "label": "publish",
                "command": [
                    "unset REPO_ENV &&",
                    "cd /tmp/$REPO &&",
                    "twine upload dist/* && rm -rf /tmp/$REPO"
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "link",
                    "tox",
                    "lint",
                    "package"
                ],
                "type": "shell"
            },
            {
                "label": "python",
                "command": "python3.10",
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "requirements",
                "command": [
                    "python3 -m pip list --format freeze",
                    "> docker/frozen_requirements.txt"
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "test",
                "command": [
                    "export PROCS=`",
                        "python3 -c 'import os; print(os.cpu_count())'` &&",
                    "pytest",
                        "-c docker/pytest.ini",
                        "--numprocesses $PROCS",
                        "python"
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "tox-repo",
                "command": [
                    "rm -rf /home/ubuntu/build && ",
                    "python3 -c",
                    "\"from rolling_pin.conform_etl import ConformETL;",
                    "src = 'docker/build.yaml';",
                    "ConformETL.from_yaml(src).conform(groups=['base', 'test'])",
                    "\""
                ],
                "type": "shell",
                "dependsOrder": "sequence",
                "dependsOn": ["link"]
            },
            {
                "label": "tox",
                "command": [
                    "unset REPO_ENV &&",
                    "cd /home/ubuntu/build/repo &&",
                    "tox"
                ],
                "dependsOrder": "sequence",
                "dependsOn": [
                    "link",
                    "tox-repo"
                ],
                "type": "shell"
            },
            {
                "label": "version",
                "dependsOrder": "sequence",
                "dependsOn": [
                    "link",
                    "lint",
                    "full-docs",
                    "requirements"
                ],
                "type": "shell"
            }
        ]
    }
}
